<?xml version="1.0" encoding="UTF-8"?>
<project
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
   xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>ru.spb.iac</groupId>
      <artifactId>cud</artifactId>
      <version>1.0</version>
   </parent>
   <artifactId>picketlink-oauth-provider-wwwserver</artifactId>
   <version>1.0.0-SNAPSHOT</version>
   <packaging>war</packaging>
   <name>picketlink-oauth-provider WWW Server</name>
   <description>picketlink-oauth-provider server implementation</description>

   <properties>
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
       <javaee6.spec.version>3.0.0.Beta1</javaee6.spec.version>
      <jboss.logging.version>3.1.0.GA</jboss.logging.version>
        <version.picketlink.javaee.bom>2.5.2.Final</version.picketlink.javaee.bom>
   </properties>
   <dependencyManagement>
       <dependencies>
      
           
			<!--dependency>
				<groupId>org.apache.oltu.oauth2</groupId>
				<artifactId>org.apache.oltu.oauth2.common</artifactId>
				<version>1.0.1</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.oltu.oauth2</groupId>
				<artifactId>org.apache.oltu.oauth2.client</artifactId>
				<version>1.0.1</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.oltu.oauth2</groupId>
				<artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
				<version>1.0.1</version>
			</dependency-->
			
           
       </dependencies>
   </dependencyManagement>

   <dependencies>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>

		<dependency>
			<groupId>ru.spb.iac</groupId>
			<artifactId>common-ilib</artifactId>
			<version>1.0</version>
			 <scope>provided</scope>
			 <!--exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions-->
		</dependency>
		

       <!--dependency>
           <groupId>org.picketlink</groupId>
           <artifactId>picketlink-api</artifactId>
           <scope>provided</scope>
            <exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
       </dependency>

       <dependency>
           <groupId>org.picketlink</groupId>
           <artifactId>picketlink-impl</artifactId>
           <scope>provided</scope>
           <exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
       </dependency-->


      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>

       <dependency>
         <groupId>org.jboss.spec.javax.annotation</groupId>
         <artifactId>jboss-annotations-api_1.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

       <dependency>
         <groupId>org.jboss.spec.javax.ws.rs</groupId>
         <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

       <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.0-api</artifactId>
         <scope>provided</scope>
      </dependency>

        <dependency>
         <groupId>org.jboss.spec.javax.ejb</groupId>
         <artifactId>jboss-ejb-api_3.1_spec</artifactId>
       <scope>provided</scope>
      </dependency>


       <!--dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-validator</artifactId>
         <version>4.2.0.Final</version>
         <scope>provided</scope>
         <exclusions>
            <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-jpamodelgen</artifactId>
         <version>1.1.1.Final</version>
         <scope>provided</scope>
      </dependency-->

      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
         <version>${jboss.logging.version}</version>
         <scope>provided</scope>
      </dependency>
    <!--dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.10</version>
         <scope>test</scope>
      </dependency>

       <dependency>
         <groupId>org.jboss.arquillian.junit</groupId>
         <artifactId>arquillian-junit-container</artifactId>
         <version>1.0.0.Final</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.arquillian.protocol</groupId>
         <artifactId>arquillian-protocol-servlet</artifactId>
         <version>1.0.0.Final</version>
         <scope>test</scope>
      </dependency-->

      <dependency>
         <groupId>org.codehaus.jackson</groupId>
         <artifactId>jackson-jaxrs</artifactId>
         <version>1.9.2</version>
      </dependency>
      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jaxrs</artifactId>
         <version>2.3.3.Final</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.spec.javax.servlet</groupId>
         <artifactId>jboss-servlet-api_3.0_spec</artifactId>
         <version>1.0.1.Final</version>
         <scope>provided</scope>
      </dependency>

      <!--dependency>
         <groupId>org.json</groupId>
         <artifactId>json</artifactId>
         <version>20090211</version>
      </dependency-->

      <!--dependency>
         <groupId>org.openid4java</groupId>
         <artifactId>openid4java-nodeps</artifactId>
         <version>0.9.6</version>
      </dependency>
       
     <dependency>
         <groupId>org.apache.httpcomponents</groupId>
         <artifactId>httpclient</artifactId>
         <version>4.1.1</version>
      </dependency>


		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.common</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
			<version>1.0.1</version>
		</dependency-->
		
				
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.jwt</artifactId>
			<version>1.0.1</version>
		</dependency>
		

		
        <dependency>
			<groupId>ru.spb.iac</groupId>
			<artifactId>crypto-15export</artifactId>
			<version>1.0</version>
			 <scope>provided</scope>
		</dependency>
		
   </dependencies>
   <build>
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.1</version>
            <configuration>
               <source>1.7</source>
               <target>1.7</target>
               <debug>true</debug>
               <debuglevel>source</debuglevel>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
               <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
         <!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
         <!-- To use, set the JBOSS_HOME environment variable and run: mvn package
            jboss-as:deploy -->
         <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
            <version>7.1.0.Beta1b</version>
         </plugin>
      </plugins>
   </build>
   <profiles>
      <profile>
         <!-- The default profile skips all tests, though you can tune it to run
            just unit tests based on a custom pattern -->
         <!-- Seperate profiles are provided for running all tests, including Arquillian
            tests that execute in the specified container -->
         <id>default</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>2.4.3</version>
               </plugin>
               <plugin>
                  <artifactId>maven-war-plugin</artifactId>
                  <version>2.1.1</version>
                  <configuration>
                     <outputDirectory>deployments</outputDirectory>
                     <warName>picketlink-oauth-provider-wwwserver</warName>
                     <packagingExcludes>WEB-INF/lib/CudIlib.jar,WEB-INF/lib/common-ilib-1.0.jar,
                     WEB-INF/lib/jboss-interceptors-api_1.1_spec-1.0.1.Final.jar,
                     WEB-INF/lib/picketlink-federation-2.5.2.Final.jar,
                     WEB-INF/lib/picketlink-jbas-common-2.5.2.Final.jar,
                     WEB-INF/lib/picketlink-social-2.5.2.Final.jar,
                     WEB-INF/lib/picketlink-tomcat-common-2.5.2.Final.jar,
                     WEB-INF/lib/xpp3-1.1.4c.jar,
                     WEB-INF/lib/xpp3_min-1.1.3.4.O.jar
                     </packagingExcludes>
                  </configuration>
               </plugin>               
            </plugins>
         </build>
      </profile>
      <profile>
         <!-- We add the JBoss repository as we need the JBoss AS connectors for
            Arquillian -->
         <repositories>
            <!-- The JBoss Community public repository is a composite repository
               of several major repositories -->
            <!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
            <repository>
               <id>jboss-public-repository</id>
               <name>JBoss Repository</name>
               <url>http://repository.jboss.org/nexus/content/groups/public</url>
               <!-- These optional flags are designed to speed up your builds by reducing
                  remote server calls -->
               <releases>
               </releases>
               <snapshots>
                  <enabled>false</enabled>
               </snapshots>
            </repository>
         </repositories>
         <pluginRepositories>
            <pluginRepository>
               <id>jboss-public-repository</id>
               <name>JBoss Repository</name>
               <url>http://repository.jboss.org/nexus/content/groups/public</url>
               <releases>
               </releases>
               <snapshots>
                  <enabled>false</enabled>
               </snapshots>
            </pluginRepository>
         </pluginRepositories>
         <!-- An optional Arquillian testing profile that executes tests in your
            JBoss AS instance -->
         <!-- This profile will start a new JBoss AS instance, and execute the
            test, shutting it down when done -->
         <!-- Run with: mvn clean test -Parq-jbossas-managed -->
         <id>arq-jbossas-managed</id>

      </profile>
      <profile>
         <!-- We add the JBoss repository as we need the JBoss AS connectors for
            Arquillian -->
         <repositories>
            <!-- The JBoss Community public repository is a composite repository
               of several major repositories -->
            <!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
            <repository>
               <id>jboss-public-repository</id>
               <name>JBoss Repository</name>
               <url>http://repository.jboss.org/nexus/content/groups/public</url>
               <!-- These optional flags are designed to speed up your builds by reducing
                  remote server calls -->
               <releases>
               </releases>
               <snapshots>
                  <enabled>false</enabled>
               </snapshots>
            </repository>
         </repositories>
         <pluginRepositories>
            <pluginRepository>
               <id>jboss-public-repository</id>
               <name>JBoss Repository</name>
               <url>http://repository.jboss.org/nexus/content/groups/public</url>
               <releases>
               </releases>
               <snapshots>
                  <enabled>false</enabled>
               </snapshots>
            </pluginRepository>
         </pluginRepositories>
         <!-- An optional Arquillian testing profile that executes tests in a remote
            JBoss AS instance -->
         <!-- Run with: mvn clean test -Parq-jbossas-remote -->
         <id>arq-jbossas-remote</id>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>2.4.3</version>
                  <configuration>
                     <includes>
                        <include>**/*IT.java</include>
                     </includes>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      <profile>
         <!-- When built in OpenShift the 'openshift' profile will be used when
            invoking mvn. -->
         <!-- Use this profile for any OpenShift specific customization your app
            will need. -->
         <!-- By default that is to put the resulting archive into the 'deployments'
            folder. -->
         <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
         <id>openshift</id>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-war-plugin</artifactId>
                  <version>2.1.1</version>
                  <configuration>
                     <outputDirectory>deployments</outputDirectory>
                     <warName>picketlink-oauth-provider-wwwserver</warName>
                     <packagingExcludes>WEB-INF/lib/CudIlib.jar,WEB-INF/lib/common-ilib-1.0.jar,
                     WEB-INF/lib/jboss-interceptors-api_1.1_spec-1.0.1.Final.jar,
                     WEB-INF/lib/picketlink-federation-2.5.2.Final.jar,
                     WEB-INF/lib/picketlink-jbas-common-2.5.2.Final.jar,
                     WEB-INF/lib/picketlink-social-2.5.2.Final.jar,
                     WEB-INF/lib/picketlink-tomcat-common-2.5.2.Final.jar,
                     WEB-INF/lib/xpp3-1.1.4c.jar,
                     WEB-INF/lib/xpp3_min-1.1.3.4.O.jar
                     </packagingExcludes>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
